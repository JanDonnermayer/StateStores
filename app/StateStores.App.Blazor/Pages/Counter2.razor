@page "/counter2"
@inject IStateStore stateStore
@implements IDisposable

<h1>@GetType().Name</h1>

<p>Current count: @currentCount</p>

<button class="btn btn-primary" @onclick="IncrementCountAsync">Click me</button>

@code {
    private int currentCount = 0;

    private IStateStoreProxy<int> proxy;

    private IDisposable disposable;

    private async Task IncrementCountAsync()
    {
       if (currentCount == 0) await proxy.AddAsync(0);
       await proxy.UpdateAsync(currentCount, currentCount + 1);
    }

    protected override async Task OnInitializedAsync()
    {
        await base.OnInitializedAsync();

        proxy = stateStore.CreateProxy<int>(GetType().AssemblyQualifiedName + ".count");

        disposable = proxy           
            .OnNext()
            .Do(_ => currentCount = _)
            .ObserveOn(SynchronizationContext.Current)
            .Subscribe(_ => StateHasChanged());
    }

    public void Dispose() => disposable?.Dispose();

}
